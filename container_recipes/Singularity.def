Bootstrap: docker
From: python:3.12
Stage: spython-base

%arguments
# The default images of python are based on debian
# These arguments help customizing what it is included in the generated image
wfexs_checkout=574fe343c0b59eecd95afbc67894456359ebe649
apptainer_version=1.3.3
# JDK version parameters
JDK_MAJOR_VER=11
# Nested arguments are not allowed
JDK_VER=11.0.11
JDK_REV=9
OPENJ9_VER=0.26.0
# Go version to compile
GO_VER=1.17.13
# gocryptfs version
GOCRYPTFS_VER=v2.4.0
# static bash version
STATIC_BASH_VER=5.1.004-1.2.2
# static busybox version
BUSYBOX_VER=1.35.0


%post
set -ue
# Install apptainer
DPKG_ARCH=$(dpkg --print-architecture) && \
wget -nv \
https://github.com/apptainer/apptainer/releases/download/v{{ apptainer_version }}/apptainer_{{ apptainer_version }}_${DPKG_ARCH}.deb \
https://github.com/apptainer/apptainer/releases/download/v{{ apptainer_version }}/apptainer-suid_{{ apptainer_version }}_${DPKG_ARCH}.deb && \
apt-get update && \
apt-get install -y ./*.deb && \
rm -f *.deb
# Install docker-ce-cli
# hadolint ignore=DL3008
wget -nv -O /etc/apt/keyrings/docker.asc https://download.docker.com/linux/debian/gpg && \
chmod a+r /etc/apt/keyrings/docker.asc && \
echo \
"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
$(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
tee /etc/apt/sources.list.d/docker.list > /dev/null && \
apt-get update && \
apt-get install -y --no-install-recommends docker-ce-cli
# Install both podman, encfs and graphviz
# hadolint ignore=DL3008
apt-get install -y podman encfs graphviz
# Install WfExS, trusting the installers in the commit rather than the
# one in the docker recipe
mkdir -p /
cd /
# hadolint ignore=DL3003
git clone --filter=blob:none --no-checkout https://github.com/inab/WfExS-backend.git && \
cd WfExS-backend && \
git sparse-checkout init --cone && \
PYVER=$(python -c 'import sys; print("{}.{}".format(sys.version_info.major, sys.version_info.minor))') && \
git sparse-checkout set constraints-${PYVER}.txt container_recipes/basic-installer.bash container_recipes/full-installer.bash && \
git checkout "{{ wfexs_checkout }}" && \
pip install --no-cache-dir "git+https://github.com/inab/WfExS-backend.git@{{ wfexs_checkout }}" -c constraints-${PYVER}.txt && \
python -m compileall "$(python -c 'import sys; print(sys.prefix)')" && \
mv container_recipes/* / && \
cd .. && \
rm -rf WfExS-backend
# Transfer other third party installation script
# COPY basic-installer.bash full-installer.bash ./
# Install third party software
JDK_MAJOR_VER="{{ JDK_MAJOR_VER }}" \
JDK_VER="{{ JDK_VER }}" \
JDK_REV="{{JDK_REV }}" \
OPENJ9_VER="{{ OPENJ9_VER }}" \
GO_VER="{{ GO_VER }}" \
GOCRYPTFS_VER="{{ GOCRYPTFS_VER }}" \
STATIC_BASH_VER="{{ STATIC_BASH_VER }}" \
BUSYBOX_VER="{{ BUSYBOX_VER }}" \
bash /full-installer.bash

%runscript
cd /
exec /bin/bash bash "$@"

%startscript
cd /
exec /bin/bash bash "$@"
