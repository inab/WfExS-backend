Bootstrap: docker
From: pypy:3.11-slim-trixie
Stage: build

%arguments
# The default images of python are based on debian
# These arguments help customizing what it is included in the generated image
wfexs_checkout=eb5d0f0fc95c60e545b0c96ec8da0efff0a7d74b
apptainer_version=1.4.3
# JDK version parameters
JDK_MAJOR_VER=11
# Nested arguments are not allowed
JDK_VER=11.0.11
JDK_REV=9
OPENJ9_VER=0.26.0
# Go version to compile
GO_VER=1.20.14
# gocryptfs version
GOCRYPTFS_VER=v2.6.1
# static bash version
STATIC_BASH_VER=5.1.004-1.2.2
# static busybox version
BUSYBOX_VER=1.35.0


%post
set -ue

cd /

# Install preconditions (including apptainer)
DPKG_ARCH=$(dpkg --print-architecture) && \
apt-get update && \
apt-get install -y --no-install-recommends wget build-essential git libxml2-dev libxslt-dev zlib1g-dev && \
wget -nv -O /tmp/rust-installer.sh https://sh.rustup.rs && \
chmod +x /tmp/rust-installer.sh && \
/tmp/rust-installer.sh -y && \
wget -nv \
https://github.com/apptainer/apptainer/releases/download/v"{{ apptainer_version }}"/apptainer_"{{ apptainer_version }}"-trixie+_"${DPKG_ARCH}".deb \
https://github.com/apptainer/apptainer/releases/download/v"{{ apptainer_version }}"/apptainer-suid_"{{ apptainer_version }}"-trixie+_"${DPKG_ARCH}".deb && \
apt-get install -y --no-install-recommends ./*.deb

# Install WfExS, trusting the installers in the commit rather than the
# one in the docker recipe
git clone --filter=blob:none --no-checkout https://github.com/inab/WfExS-backend.git && \
cd WfExS-backend && \
git sparse-checkout init --cone && \
PYVER=$(python -c 'import sys; import platform ; print("{}{}.{}".format("pypy" if platform.python_implementation() == "PyPy" else "", sys.version_info.major, sys.version_info.minor))') && \
git sparse-checkout set constraints-${PYVER}.txt \
  podman_containers_nokeyring.conf \
  container_recipes/basic-installer.bash \
  container_recipes/full-installer.bash && \
git checkout "{{ wfexs_checkout }}" && \
grep -vF git+ constraints-${PYVER}.txt > constraints-${PYVER}.txt-relaxed && \
. "${HOME}"/.cargo/env && \
pip install --no-cache-dir --upgrade pip wheel && \
pip install --no-cache-dir "git+https://github.com/inab/WfExS-backend.git@{{ wfexs_checkout }}" -c constraints-"${PYVER}".txt-relaxed && \
python -m compileall "$(python -c 'import sys; print(sys.prefix)')" && \
mv container_recipes/* /

# Install third party software
apt-get install -y --no-install-recommends curl libmagic1 graphviz && \
JDK_MAJOR_VER="{{ JDK_MAJOR_VER }}" \
JDK_VER="{{ JDK_VER }}" \
JDK_REV="{{ JDK_REV }}" \
OPENJ9_VER="{{ OPENJ9_VER }}" \
GO_VER="{{ GO_VER }}" \
GOCRYPTFS_VER="{{ GOCRYPTFS_VER }}" \
STATIC_BASH_VER="{{ STATIC_BASH_VER }}" \
BUSYBOX_VER="{{ BUSYBOX_VER }}" \
bash /full-installer.bash

Bootstrap: docker
From: pypy:3.11-slim-trixie
Stage: image

%files from build
/podman_containers_nokeyring.conf /etc/containers/containers.conf
/opt/pypy /opt
/*.deb /tmp/

%post
set -ue

# Install docker-ce-cli
# Cleanups
DPKG_ARCH=$(dpkg --print-architecture) && \
python -c 'import urllib.request ; urllib.request.urlretrieve("https://download.docker.com/linux/debian/gpg", "/etc/apt/keyrings/docker.asc")' && \
chmod a+r /etc/apt/keyrings/docker.asc && \
echo \
"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
$(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
tee /etc/apt/sources.list.d/docker.list > /dev/null && \
apt-get update && \
apt-get install -y --no-install-recommends git libmagic1 libxml2 libxslt1.1 zlib1g python3-venv podman encfs graphviz docker-ce-cli wget && \
apt-get install -y --no-install-recommends /tmp/*.deb && \
apt-get clean && \
rm -f /tmp/*.deb /var/cache/apt/archives/*.deb && \ 
rm -rf /var/lib/apt/lists/*

%runscript
cd /
exec /bin/bash bash "$@"

%startscript
cd /
exec /bin/bash bash "$@"
